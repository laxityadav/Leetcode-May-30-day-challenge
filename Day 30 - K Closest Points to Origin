class Solution {    
    class Pair 
    {
        int x, y, len;
        Pair(int x, int y, int len){
            this.x = x;
            this.y = y;
            this.len = len;
        }
    }
    public int[][] kClosest(int[][] points, int K) {
        int n = points.length;
        PriorityQueue<Pair> queue = new PriorityQueue<>(new Comparator<Pair>(){
            public int compare(Pair p1, Pair p2){
               return p1.len - p2.len;
            }
        });
        for(int []p:points)
            queue.add(new Pair(p[0], p[1], p[0]*p[0]+p[1]*p[1]));
        
        int [][]ans = new int[K][2];
        for(int i=0;i<K;i++)
        {
            Pair temp = queue.poll();
            ans[i][0] = temp.x;
            ans[i][1] = temp.y;
        }
        return ans;
    }
}
