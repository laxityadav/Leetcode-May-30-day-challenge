/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void find(TreeNode root, int value)
    {
        if(root.val > value && root.left==null){
            TreeNode newNode = new TreeNode(value, null, null);
            root.left = newNode;
            return;
        }
        else if(root.val <= value && root.right==null){
            TreeNode newNode = new TreeNode(value, null, null);
            root.right = newNode;
            return;
        }
            
        if(root.val > value)
            find(root.left, value);
        else
            find(root.right, value);
    }
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(preorder[0], null, null);
        for(int i=1;i<preorder.length;i++)
            find(root, preorder[i]);
        
        return root;
    }
}
