Java Version
class Solution {
    public int countSquares(int[][] matrix) {
        
        int row = matrix.length;
        int col = matrix[0].length;
        int [][]dp = new int[row+1][col+1];
        
        int ans = 0;
        for(int i=1;i<=row;i++)
        {
            for(int j=1;j<=col;j++)
            {
                if(matrix[i-1][j-1] == 1){
                    dp[i][j] = 1 + Math.min(dp[i][j-1], Math.min(dp[i-1][j], dp[i-1][j-1]));
                    ans+=dp[i][j];
                }
            }
        }
        return ans;
    }
}


Python Version

class Solution(object):
    def countSquares(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: int
        """
        dp_tab=matrix
        count=0
        sum1=0
        for i in range(1,len(matrix)):
            for j in range(1,len(matrix[0])):
                if(matrix[i][j]):
                    dp_tab[i][j]=1 + min(dp_tab[i][j-1],dp_tab[i-1][j],dp_tab[i-1][j-1])
                    
        return sum(chain(*dp_tab))
